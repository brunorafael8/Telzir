"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfoExtended {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""Represents Plan"""
type Plan implements Node {
  """The ID of an object"""
  id: ID!

  """MongoDB _id"""
  _id: String
  name: String
  minutes: Int
}

"""A connection to a list of items."""
type PlanConnection {
  """Number of items in this connection"""
  count: Int!

  """
  A count of the total number of objects in this connection, ignoring pagination.
        This allows a client to fetch the first five objects by passing "5" as the
        argument to "first", then fetch the total count so it could display "5 of 83",
        for example.
  """
  totalCount: Int!

  """Offset from start"""
  startCursorOffset: Int!

  """Offset till end"""
  endCursorOffset: Int!

  """Information to aid in pagination."""
  pageInfo: PageInfoExtended!

  """A list of edges."""
  edges: [PlanEdge]!
}

"""An edge in a connection."""
type PlanEdge {
  """The item at the end of the edge"""
  node: Plan!

  """A cursor for use in pagination"""
  cursor: String!
}

"""Represents Price"""
type Price implements Node {
  """The ID of an object"""
  id: ID!

  """MongoDB _id"""
  _id: String
  origin: String
  destiny: Int
  pricePerMinute: Int
}

"""A connection to a list of items."""
type PriceConnection {
  """Number of items in this connection"""
  count: Int!

  """
  A count of the total number of objects in this connection, ignoring pagination.
        This allows a client to fetch the first five objects by passing "5" as the
        argument to "first", then fetch the total count so it could display "5 of 83",
        for example.
  """
  totalCount: Int!

  """Offset from start"""
  startCursorOffset: Int!

  """Offset till end"""
  endCursorOffset: Int!

  """Information to aid in pagination."""
  pageInfo: PageInfoExtended!

  """A list of edges."""
  edges: [PriceEdge]!
}

"""An edge in a connection."""
type PriceEdge {
  """The item at the end of the edge"""
  node: Price!

  """A cursor for use in pagination"""
  cursor: String!
}

"""The root of all... queries"""
type Query {
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
  plans(after: String, first: Int, before: String, last: Int): PlanConnection
  price(after: String, first: Int, before: String, last: Int): PriceConnection
}
